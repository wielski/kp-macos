//
// AudioInfo.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct AudioInfo: Codable, JSONEncodable, Hashable {

    public var id: Int64?
    public var index: Int?
    public var codec: String?
    public var channels: Int?
    public var lang: String?
    public var type: AudioInfoType?
    public var author: AudioInfoType?

    public init(id: Int64? = nil, index: Int? = nil, codec: String? = nil, channels: Int? = nil, lang: String? = nil, type: AudioInfoType? = nil, author: AudioInfoType? = nil) {
        self.id = id
        self.index = index
        self.codec = codec
        self.channels = channels
        self.lang = lang
        self.type = type
        self.author = author
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case index
        case codec
        case channels
        case lang
        case type
        case author
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(index, forKey: .index)
        try container.encodeIfPresent(codec, forKey: .codec)
        try container.encodeIfPresent(channels, forKey: .channels)
        try container.encodeIfPresent(lang, forKey: .lang)
        try container.encodeIfPresent(type, forKey: .type)
        try container.encodeIfPresent(author, forKey: .author)
    }
}

