//
// Comment.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Comment: Codable, JSONEncodable, Hashable {

    public var id: Int64?
    public var depth: Int64?
    public var unread: Bool?
    public var deleted: Bool?
    public var message: String?
    public var created: Int64?
    public var rating: Int?
    public var user: CommentUser?

    public init(id: Int64? = nil, depth: Int64? = nil, unread: Bool? = nil, deleted: Bool? = nil, message: String? = nil, created: Int64? = nil, rating: Int? = nil, user: CommentUser? = nil) {
        self.id = id
        self.depth = depth
        self.unread = unread
        self.deleted = deleted
        self.message = message
        self.created = created
        self.rating = rating
        self.user = user
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case depth
        case unread
        case deleted
        case message
        case created
        case rating
        case user
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(depth, forKey: .depth)
        try container.encodeIfPresent(unread, forKey: .unread)
        try container.encodeIfPresent(deleted, forKey: .deleted)
        try container.encodeIfPresent(message, forKey: .message)
        try container.encodeIfPresent(created, forKey: .created)
        try container.encodeIfPresent(rating, forKey: .rating)
        try container.encodeIfPresent(user, forKey: .user)
    }
}

