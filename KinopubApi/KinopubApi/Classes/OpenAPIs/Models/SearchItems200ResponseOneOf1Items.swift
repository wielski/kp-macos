//
// SearchItems200ResponseOneOf1Items.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct SearchItems200ResponseOneOf1Items: Codable, JSONEncodable, Hashable {

    public var movie: [ItemInfo]?
    public var serial: [ItemInfo]?
    public var _3d: [ItemInfo]?
    public var concert: [ItemInfo]?
    public var documovie: [ItemInfo]?
    public var docuserial: [ItemInfo]?
    public var tvshow: [ItemInfo]?

    public init(movie: [ItemInfo]? = nil, serial: [ItemInfo]? = nil, _3d: [ItemInfo]? = nil, concert: [ItemInfo]? = nil, documovie: [ItemInfo]? = nil, docuserial: [ItemInfo]? = nil, tvshow: [ItemInfo]? = nil) {
        self.movie = movie
        self.serial = serial
        self._3d = _3d
        self.concert = concert
        self.documovie = documovie
        self.docuserial = docuserial
        self.tvshow = tvshow
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case movie
        case serial
        case _3d = "3d"
        case concert
        case documovie
        case docuserial
        case tvshow
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(movie, forKey: .movie)
        try container.encodeIfPresent(serial, forKey: .serial)
        try container.encodeIfPresent(_3d, forKey: ._3d)
        try container.encodeIfPresent(concert, forKey: .concert)
        try container.encodeIfPresent(documovie, forKey: .documovie)
        try container.encodeIfPresent(docuserial, forKey: .docuserial)
        try container.encodeIfPresent(tvshow, forKey: .tvshow)
    }
}

