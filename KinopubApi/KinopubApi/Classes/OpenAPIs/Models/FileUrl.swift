//
// FileUrl.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct FileUrl: Codable, JSONEncodable, Hashable {

    public var http: String?
    public var hls: String?
    public var hls2: String?
    public var hls4: String?

    public init(http: String? = nil, hls: String? = nil, hls2: String? = nil, hls4: String? = nil) {
        self.http = http
        self.hls = hls
        self.hls2 = hls2
        self.hls4 = hls4
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case http
        case hls
        case hls2
        case hls4
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(http, forKey: .http)
        try container.encodeIfPresent(hls, forKey: .hls)
        try container.encodeIfPresent(hls2, forKey: .hls2)
        try container.encodeIfPresent(hls4, forKey: .hls4)
    }
}

